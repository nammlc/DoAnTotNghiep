@page
@model DoAnTotNghiep.Pages.MonAnModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_NhanVienLayout";
}

@{
    var userName = HttpContextAccessor.HttpContext?.Session.GetString("User");
    if (userName != "ADMIN01")
    {
        <div style="position: relative; right: -23%; top : 40%"><strong> Bạn không có quyền sử dụng trang web này ! Vui lòng đăng nhập với
                tài khoản của admin</strong></div>
    }
    else
    {

        <div class="main-content">
            <div class="main-content_header">
                <div style="font-size: 4.5vh;">Quản lý món ăn</div>
                <button>
                    <a href="javascript:void(0)" style="text-decoration: none; color: #fff">
                        <img src="~/css/assets/icon/add.png" alt="">
                        Thêm mới
                    </a>
                </button>
            </div>
            <div class="search-container">
                <div class="search-container_left">
                    <form method="get" action="@Url.Action("/Admin/MonAn")">
                        <input type="text" id="searchInput" name="searchQuery" value="@ViewBag.SearchQuery"
                            placeholder="Tìm kiếm theo tên món ăn..." class="form-control">
                    </form>
                </div>
                <div class="search-container_right">
                    <div class="excel">
                        <img src="~/css/assets/icon/export-excel-50.png" alt="">
                    </div>
                    <div class="reload">
                        <img src="~/css/assets/icon/refresh.png" alt="" id="reloadBtn">
                    </div>
                </div>
            </div>
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Mã món ăn</th>
                        <th>Tên món ăn </th>
                        <th>Giá món ăn</th>
                        <th>Loại món ăn</th>
                        <th>Phân Loại món ăn</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.MonAns != null && Model.MonAns.Any())
                    {
                        // Khai báo biến currentPage
                        int currentPage = (int)(ViewData["CurrentPage"] ?? 1);
                        int pageSize = 10;
                        int stt = (currentPage - 1) * pageSize + 1;


                        foreach (var monAn in Model.MonAns)
                        {
                            <tr class="all-dish">
                                <td>@stt</td>
                                <td data-code="@monAn.ma_mon_an">@monAn.ma_mon_an</td>
                                <td data-type="@monAn.ten_mon_an">@monAn.ten_mon_an</td>
                                <td>@monAn.gia_mon_an</td>
                                <td>@monAn.loai_mon_an</td>

                                <td style="display: flex; justify-content: space-between;">
                                    <div>@monAn.phan_loai_thuc_an</div>
                                    <div class="hide-icon_form">
                                        <div class="edit-btn" data-id="@monAn.id">
                                            <i class="fa-solid fa-user-pen" style="color: rgb(26, 195, 37);"></i>
                                        </div>
                                        <div class="delete-btn" data-id="@monAn.id" data-code="@monAn.id"
                                            style="border: none; padding-left: 5px;">
                                            <i class="fa-solid fa-x" style="color: red;"></i>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            stt++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">Không có dữ liệu</td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    
                </ul>
            </nav>




        </div>
        <div class="footer"></div>

        <div class="modal fade" id="addNewDishModal" tabindex="-1" aria-labelledby="addNewDishModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addNewDishModalLabel">Thêm mới Món Ăn</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="close-btn">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="dishForm" asp-page-handler="MonAn" method="post">
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="ma_mon_an" class="form-label">Mã Món Ăn:</label>
                                    <input type="text" class="form-control" id="ma_mon_an" name="ma_mon_an" required
                                        value="Create Automatically" readonly />
                                </div>
                                <div class="col-md-6">
                                    <label for="ten_món ăn" class="form-label">Tên Món Ăn:</label>
                                    <input type="text" class="form-control" id="ten_món ăn" name="ten_món ăn" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label for="gia_mon_an" class="form-label">Giá nhập Món Ăn:</label>
                                    <input type="text" class="form-control" id="gia_mon_an" name="gia_mon_an" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-12">
                                    <label for="mo_ta" class="form-label">Mô tả về món ăn:</label>
                                    <input type="text" class="form-control" id="mo_ta" name="mo_ta" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-12">
                                    <label for="loai_mon_an" class="form-label">Chú thích:</label>
                                    <input type="text" class="form-control" id="loai_mon_an" name="loai_mon_an" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-12">
                                    <label for="phan_loai_thuc_an" class="form-label">Phân loại món ăn:</label>
                                    <input type="text" class="form-control" id="phan_loai_thuc_an" name="phan_loai_thuc_an"
                                        required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-12">
                                    <label for="anh_minh_hoa" class="form-label">Ảnh minh họa:</label>
                                    <input type="text" class="form-control" id="anh_minh_hoa" name="anh_minh_hoa" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col text-end">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                                        id="close-btn2">Hủy</button>
                                    <button type="submit" class="btn btn-primary"
                                        style="background-color: rgb(13, 179, 13);">Lưu</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel"
            aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Bạn có chắc chắn muốn xóa Món Ăn này <strong id="employeeCode"></strong>?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var toggleSidebar = document.getElementById("toggleSidebar");
                var sidebar = document.querySelector(".sidebar");
                var mainContent = document.querySelector(".main-content");

                toggleSidebar.addEventListener("click", function () {
                    if (sidebar.style.width === "55px") {
                        sidebar.style.width = "200px";
                        mainContent.style.paddingLeft = "23px";
                        toggleSidebar.innerHTML = '<i class="fa-solid fa-chevron-left" style="padding-right : 10px "></i> Thu gọn';
                    } else {
                        sidebar.style.width = "55px";
                        mainContent.style.paddingLeft = "30px";
                        toggleSidebar.innerHTML = '<i class="fa-solid fa-chevron-right"></i>';
                    }
                });
            });
        </script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelector(".main-content_header button").addEventListener("click", function () {

                    var myModal = new bootstrap.Modal(document.getElementById('addNewDishModal'), {
                        keyboard: false
                    });
                    myModal.show();
                });
                document.getElementById("close-btn").addEventListener("click", function () {
                    console.log("tắt modal");
                    var myModal = bootstrap.Modal.getInstance(document.getElementById('addNewDishModal'));
                    if (myModal) {
                        myModal.hide();
                    }
                });
                document.getElementById("close-btn2").addEventListener("click", function () {
                    var myModal = bootstrap.Modal.getInstance(document.getElementById('addNewDishModal'));
                    if (myModal) {
                        myModal.hide();
                    }
                });


                document.querySelectorAll(".edit-btn").forEach(function (div) {
                    div.addEventListener("click", function () {
                        var id = this.getAttribute('data-id');
                        var editUrl = '@Url.Page("/MonAn")?handler=edit&&id=__id__'.replace('__id__', id);
                        console.log(editUrl)

                        window.location.href = editUrl;
                    });
                });

                document.querySelectorAll(".delete-btn").forEach(function (div) {
                    div.addEventListener("click", function () {
                        deleteDishId = this.getAttribute("data-id");
                        console.log(deleteDishId);
                        var employeeCode = this.getAttribute("data-code");

                        // Hiển thị mã món ăn trên modal
                        document.getElementById("employeeCode").innerText = employeeCode;

                        // Hiển thị modal
                        $('#confirmDeleteModal').modal('show');
                    });
                });

                document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
                    if (deleteDishId) {

                        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                        fetch(`/Admin/MonAn?handler=Delete&id=${deleteDishId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                                "XSRF-TOKEN": csrfToken
                            }
                        })
                            .then(response => {
                                console.log(response.status)
                                if (response.ok) {
                                    alert("Xóa thành công");
                                    window.location.reload();
                                } else {
                                    return response.text().then(text => {
                                        alert("Xóa không thành công: " + text);
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Có lỗi xảy ra:', error);
                                alert("Có lỗi xảy ra khi xóa.");
                            })
                            .finally(() => {
                                $('#confirmDeleteModal').modal('hide');
                            });
                    }
                });


            });
            document.getElementById("reloadBtn").addEventListener("click", function () {
                window.location.reload();
            });



        </script>
        <script>
            const dishPerPage = 10; // Số món ăn mỗi trang
            let currentPage = 1; // Trang hiện tại
            let dishs = Array.from(document.querySelectorAll('.all-dish')); // Chuyển NodeList thành mảng

            function filterDishs(searchQuery) {
                const filteredDishs = [];
                dishs.forEach(dish => {
                    const name = dish.children[2]?.textContent.toLowerCase() || ''; // Cột "Tên món ăn"
                    const code = dish.children[1]?.textContent.toLowerCase() || ''; // Cột "Mã món ăn"
                    if (name.includes(searchQuery) || code.includes(searchQuery)) {
                        filteredDishs.push(dish);
                    }
                });
                return filteredDishs;
            }

            function showPage(page, filteredDishs) {
                const start = (page - 1) * dishPerPage;
                const end = start + dishPerPage;

                dishs.forEach(dish => {
                    dish.style.display = "none"; // Ẩn tất cả
                });

                filteredDishs.forEach((dish, index) => {
                    if (index >= start && index < end) {
                        dish.style.display = "table-row"; // Hiển thị món ăn nếu nằm trong khoảng
                    }
                });

                updatePagination(page, filteredDishs.length);
            }

            function updatePagination(page, totalFilteredDishs) {
                const pagination = document.querySelector('.pagination');
                const totalPages = Math.ceil(totalFilteredDishs / dishPerPage);
                pagination.innerHTML = '';

                if (page > 1) {
                    pagination.innerHTML += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${page - 1})">«</a></li>`;
                }

                for (let i = 1; i <= totalPages; i++) {
                    if (i === page) {
                        pagination.innerHTML += `<li class="page-item active"><a class="page-link" href="#">${i}</a></li>`;
                    } else {
                        pagination.innerHTML += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${i})">${i}</a></li>`;
                    }
                }

                if (page < totalPages) {
                    pagination.innerHTML += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${page + 1})">»</a></li>`;
                }
            }

            function changePage(page) {
                currentPage = page;
                const filteredDishs = filterDishs(document.getElementById('searchInput').value.toLowerCase());
                showPage(currentPage, filteredDishs);
            }

            document.getElementById('searchInput').addEventListener('input', function () {
                const searchQuery = this.value.toLowerCase();
                const filteredDishs = filterDishs(searchQuery);
                currentPage = 1;
                showPage(currentPage, filteredDishs);
            });

            showPage(currentPage, dishs);
        </script>

    }
}